# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

# trigger:
# - none
# - master

trigger:
  branches:
    include:
    - build

variables:

  ### Variables ###
  key1: 'value1'
  key2: 'value2'
  key3: 'value3'

pool:
  vmImage: 'ubuntu-latest'

stages:

  ################################################################################
  #                             Build ZIP File Stage                             #
  ################################################################################  
  - stage: Build_Artifact
    jobs:
      - job: Build_Artifact
        steps:
      
        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: '$(Build.BinariesDirectory)'
            includeRootFolder: true
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true

        # Publish ZIP File as Pipeline Build
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Build'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

  ################################################################################
  #                     Publish WAR File to Artifacts Stage                      #
  ################################################################################    
  - stage: Publish_Artifact
    jobs:
      - job: Publish_Artifact
        steps:

        # Download WAR File from Pipeline Build
        - task: DownloadBuildArtifacts@0
          displayName: 'Download Build'
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.ArtifactsDirectory)'
            
        # Publish WAR File to Artifacts Repo
        - task: UniversalPackages@0
          displayName: 'Publish Artifact'
          inputs:
            command: 'publish'
            publishDirectory: '$(System.ArtifactsDirectory)'
            feedsToUsePublish: 'internal'
            vstsFeedPublish: 'castor/castor'
            vstsFeedPackagePublish: 'castor'
            versionOption: 'patch'
            packagePublishDescription: 'Latest'